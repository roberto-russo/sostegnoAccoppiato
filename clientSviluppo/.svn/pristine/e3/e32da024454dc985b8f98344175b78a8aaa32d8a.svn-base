package it.csi.demetra.demetraws.zoo;

import java.text.ParseException;
import javax.validation.ConstraintViolationException;
import javax.xml.bind.JAXBException;
import javax.xml.ws.WebServiceException;
import org.springframework.beans.factory.annotation.Autowired;
import it.csi.demetra.demetraws.srmanags.wsbridge2.Response;
import it.csi.demetra.demetraws.srmanags.wsbridge2.WSBridge2;
import it.csi.demetra.demetraws.srmanags.wsbridge2.WSBridgeInternalException_Exception;
import it.csi.demetra.demetraws.srmanags.wsbridge2.WSBridgeService;
import it.csi.demetra.demetraws.zoo.model.Dmt_d_clsPremio_ValidazioneResponse;
import it.csi.demetra.demetraws.zoo.model.Dmt_t_errore;
import it.csi.demetra.demetraws.zoo.model.Dmt_s_sessione;
import it.csi.demetra.demetraws.zoo.model.Dmt_t_DsUBA_censimenti_allevamenti_ovini;
import it.csi.demetra.demetraws.zoo.services.Dmt_t_errore_services;
import it.csi.demetra.demetraws.zoo.services.SaveOnDbService;
import it.csi.demetra.demetraws.zoo.transformer.TransformerData;
import org.springframework.stereotype.Component;

@Component
public class BdnWsManagerImpl {

	@Autowired
	SaveOnDbService save;
	
	@Autowired
	Dmt_t_errore_services erroreService;

	WSBridge2 wsBridge2;
	
	Response response;

	public BdnWsManagerImpl() {
		connectWsBridge2();
	}

	public void connectWsBridge2() {
		this.wsBridge2 = new WSBridgeService().getWSBridge2Port();
	}

	public void getElencoCapiPremio(String codiceIntervento, String cuaa, Integer anno_campagna, Dmt_s_sessione sessione) {
		
		try {
			response = wsBridge2.getElencoCapiPremioNew(codiceIntervento, cuaa, anno_campagna);
			
//			System.out.println("RESPONSE INFO: " + response.getInfo());
//			System.out.println("RESPONSE COD RET: " + response.getCodRet());
//			System.out.println("RESPONSE CODICE ERRORE: " + response.getCodiceErrore());
//			System.out.println("RESPONSE DESCRIZIONE ERRORE: " + response.getDescrizioneErrore());
//			System.out.println("RESPONSE ESITO: " + response.getEsito());
//			
//			System.out.println("ID SESSIONE IN BdnWsManagerImpl METODO GET_ELENCO_CAPI_PREMIO: " + sessione.getIdSessione());
			
			
			if(response.getInfo().equals("0"))
				throw new NullPointerException();
			
			TransformerData transform = new TransformerData();
			Dmt_d_clsPremio_ValidazioneResponse bean = transform.TransformDmt_d_clsPremio_ValidazioneResponse(response, sessione, codiceIntervento);
			// lavora i dati raccolti
			save.saveOnDb(bean);
		} catch (WSBridgeInternalException_Exception | NullPointerException | IndexOutOfBoundsException | IllegalStateException e1) {
			/* SALVARE A DB RESPONSE.GETCODICEERRORE E RESPONSE.GETDESCRIZIONEERRORE */
//			System.out.println("LA CHIAMATA AL METODO DELLA BDN E' NULL GET ELENCO CAPI PREMIO");
			Dmt_t_errore errore = new Dmt_t_errore();
			
			String input = new String(codiceIntervento + " | " + cuaa + " | " + anno_campagna + " | " + sessione.getIdSessione());
			
			errore.setErrorecodice("-1");
			errore.setErroreDesc("dati non disponibili");
			errore.setNomeMetodo("getElencoCapiPremioNew");
			errore.setInput(input);
//			System.out.println("ID SESSIONE ERRORE: " + sessione.getIdSessione());
			errore.setSessione(sessione);
			erroreService.saveError(errore);
			
//			System.out.println("FINE SALVATAGGIO A DB DELL'ERRORE");
			
		} catch (JAXBException | ParseException e) {
			System.out.println(e.getCause() + ", " + e.getMessage());
		}
	}
	public void getElencoCapiPremio2(Long idAlleBdn, String codiceIntervento, String cuaa, String cuua2,
			Integer annoCampagna,Dmt_s_sessione sessione) throws JAXBException, WSBridgeInternalException_Exception, ParseException {
		// prendi i dati con chiamata http dalla bdn
		try {
				response = wsBridge2.getElencoCapiPremio2New(idAlleBdn, codiceIntervento, cuaa, cuua2, annoCampagna);
//				System.out.println("RESPONSE INFO: " + response.getInfo());
//				System.out.println("RESPONSE COD RET: " + response.getCodRet());
//				System.out.println("RESPONSE CODICE ERRORE: " + response.getCodiceErrore());
//				System.out.println("RESPONSE DESCRIZIONE ERRORE: " + response.getDescrizioneErrore());
//				System.out.println("RESPONSE ESITO: " + response.getEsito());
//				
//				System.out.println("ID SESSIONE IN BdnWsManagerImpl METODO GET_ELENCO_CAPI_PREMIO 2: " + sessione.getIdSessione());
		
				if(response.getInfo().equals("0"))
					throw new NullPointerException();
						
				TransformerData transform = new TransformerData();
				Dmt_d_clsPremio_ValidazioneResponse bean = transform.TransformDmt_d_clsPremio_ValidazioneResponse(response, sessione, codiceIntervento);
				save.saveOnDb(bean);
				
		} catch (WSBridgeInternalException_Exception | NullPointerException | IndexOutOfBoundsException | IllegalStateException | WebServiceException e1) {
			/* SALVARE A DB RESPONSE.GETCODICEERRORE E RESPONSE.GETDESCRIZIONEERRORE */
//			System.out.println("LA CHIAMATA AL METODO DELLA BDN E' NULL METODO GET ELENCO CAPI PREMIO 2");
			Dmt_t_errore errore = new Dmt_t_errore();
			
			String input = new String(idAlleBdn + " | " + codiceIntervento + " | " + cuaa + " | " + cuua2 + " | " + annoCampagna + " | " + sessione.getIdSessione());
			
			errore.setErrorecodice("-1");
			errore.setErroreDesc("dati non disponibili");
			errore.setNomeMetodo("getElencoCapiPremioNew");
			errore.setNomeMetodo("getElencoCapiPremio2New");
			errore.setInput(input);
//			System.out.println("ID SESSIONE ERRORE: " + sessione.getIdSessione());
			errore.setSessione(sessione);
			erroreService.saveError(errore);
			
//			System.out.println("FINE SALVATAGGIO A DB DELL'ERRORE");
			
		} catch (JAXBException | ParseException e) {
			System.out.println(e.getCause() + ", " + e.getMessage());
		}
	}
	public void Consistenza_UBA_Censim_Ovini_2012(String p_cuaa, String data_inizio_periodo, String Data_fine_periodo,
			String p_tipo_responsabilita, Dmt_s_sessione sessione) {
		try {
				response = wsBridge2.getConsistenzaUbaCensimOvini2012(p_cuaa, data_inizio_periodo, Data_fine_periodo, p_tipo_responsabilita);
				
//				System.out.println("RESPONSE INFO: " + response.getInfo());
//				System.out.println("RESPONSE COD RET: " + response.getCodRet());
//				System.out.println("RESPONSE CODICE ERRORE: " + response.getCodiceErrore());
//				System.out.println("RESPONSE DESCRIZIONE ERRORE: " + response.getDescrizioneErrore());
//				System.out.println("RESPONSE ESITO: " + response.getEsito());
//				
//				System.out.println("ID SESSIONE IN BdnWsManagerImpl METODO CENSIM_UBA: " + sessione.getIdSessione());
				
				if(response.getInfo().equals("0"))
					throw new NullPointerException();
				
				TransformerData transform = new TransformerData();
				Dmt_t_DsUBA_censimenti_allevamenti_ovini bean = transform.TransformDsUBA_censimenti_allevamenti_ovini(response, sessione);
				save.saveOnDb(bean, sessione);
		}catch(WSBridgeInternalException_Exception | NullPointerException | IndexOutOfBoundsException | IllegalStateException | ConstraintViolationException e1) {
			
			/* SALVARE A DB RESPONSE.GETCODICEERRORE E RESPONSE.GETDESCRIZIONEERRORE */
//			System.out.println("LA CHIAMATA AL METODO DELLA BDN E' NULL UBA CENSIM OVINI");
			Dmt_t_errore errore = new Dmt_t_errore();
			
//			if(response.getCodiceErrore().equals(""))
//				System.out.println("CODICE ERRORE VUOTO");
//			else
//				System.out.println("CODICE ERRORE PIENO");
			
			String input = new String(p_cuaa + " | " + data_inizio_periodo + " | " + Data_fine_periodo + " | " + p_tipo_responsabilita + " | " + sessione.getIdSessione());
			
			errore.setErrorecodice("-1");
			errore.setErroreDesc("dati non disponibili");
			errore.setNomeMetodo("GetConsistenzaUbaCensimOVini2012");
			errore.setInput(input);
//			System.out.println("ID SESSIONE ERRORE: " + sessione.getIdSessione());
			errore.setSessione(sessione);
			erroreService.saveError(errore);
			
//			System.out.println("FINE SALVATAGGIO A DB DELL'ERRORE");
			
		}catch(JAXBException e) {
			System.out.println(e.getCause() + ", " + e.getMessage());
			
		}
	}
}