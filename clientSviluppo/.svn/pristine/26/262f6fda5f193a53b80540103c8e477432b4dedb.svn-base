
package it.csi.srmanags.wsbridge2;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "WSBridgeService", targetNamespace = "http://it/csi/smranags/wsbridge2/business/wsbridgefacade", wsdlLocation = "http://tst-applogic.reteunitaria.piemonte.it/wsbridge2/WSBridgeService/WSBridge2?wsdl")
public class WSBridgeService
    extends Service
{
    static {

        java.net.Authenticator.setDefault(new java.net.Authenticator() {

            @Override
            protected java.net.PasswordAuthentication getPasswordAuthentication() {
                return new java.net.PasswordAuthentication("demetra", "mypAss0.".toCharArray());
            }
        });
    }
    private final static URL WSBRIDGESERVICE_WSDL_LOCATION;
    private final static WebServiceException WSBRIDGESERVICE_EXCEPTION;
    private final static QName WSBRIDGESERVICE_QNAME = new QName("http://it/csi/smranags/wsbridge2/business/wsbridgefacade", "WSBridgeService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/C:/Users/lucam/Desktop/Zootecnia/client_sviluppo/src/main/java/it/csi/srmanags/wsbridge2/WSBridge2.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        WSBRIDGESERVICE_WSDL_LOCATION = url;
        WSBRIDGESERVICE_EXCEPTION = e;
    }

    public WSBridgeService() {
        super(__getWsdlLocation(), WSBRIDGESERVICE_QNAME);
    }

    public WSBridgeService(WebServiceFeature... features) {
        super(__getWsdlLocation(), WSBRIDGESERVICE_QNAME, features);
    }

    public WSBridgeService(URL wsdlLocation) {
        super(wsdlLocation, WSBRIDGESERVICE_QNAME);
    }

    public WSBridgeService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, WSBRIDGESERVICE_QNAME, features);
    }

    public WSBridgeService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WSBridgeService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns WSBridge2
     */
    @WebEndpoint(name = "WSBridge2Port")
    public WSBridge2 getWSBridge2Port() {
        return super.getPort(new QName("http://it/csi/smranags/wsbridge2/business/wsbridgefacade", "WSBridge2Port"), WSBridge2.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSBridge2
     */
    @WebEndpoint(name = "WSBridge2Port")
    public WSBridge2 getWSBridge2Port(WebServiceFeature... features) {
        return super.getPort(new QName("http://it/csi/smranags/wsbridge2/business/wsbridgefacade", "WSBridge2Port"), WSBridge2.class, features);
    }

    private static URL __getWsdlLocation() {
        if (WSBRIDGESERVICE_EXCEPTION!= null) {
            throw WSBRIDGESERVICE_EXCEPTION;
        }
        return WSBRIDGESERVICE_WSDL_LOCATION;
    }

}
